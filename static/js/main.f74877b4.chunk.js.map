{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["OPERATOR","App","_useState","useState","_useState2","Object","slicedToArray","operation","setOperation","_useState3","_useState4","result","_useState5","_useState6","handleOperation","operationInput","arguments","length","undefined","console","log","concat","react_default","a","createElement","id","style","gridArea","className","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f74877b4.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nconst OPERATOR = \"operator\";\n\nfunction App() {\n  const [ operation, setOperation ] = useState('');\n  const [ result, setResult ] = useState(0);\n  const [ numberInput, setNumberInput ] = useState('');\n\n  const handleOperation = (operationInput, type = \"numberModifier\") => {\n    \n    console.log(\"handling operation\");\n    if (operationInput === '0' && operation === \"0\") {\n      console.log(\"too many zeros\") //doesn't work for 0s??\n    } else {\n      console.log(\"updating state\");\n      setOperation(operation.concat(operationInput));\n    }\n    \n  }\n\n  const handleEqual = () => {\n\n  }\n\n  return (\n    <div id=\"calculator\">\n        <div id=\"display\">\n          <p id=\"displayCalculation\">{operation}</p>\n          <p id=\"displayResult\">{result}</p>\n        </div>\n    \n        <div id=\"buttons\">\n          <button id=\"zero\" style={{ gridArea: 'zero' }} className=\"button\" onClick={() => handleOperation(0)}>0</button>\n          <button id=\"one\" style={{ gridArea: 'one' }} className=\"button\" onClick={() => handleOperation(1)}>1</button>\n          <button id=\"two\" style={{ gridArea: 'two' }} className=\"button\" onClick={() => handleOperation(2)}>2</button>\n          <button id=\"three\" style={{ gridArea: 'three' }} className=\"button\" onClick={() => handleOperation(3)}>3</button>\n          <button id=\"four\" style={{ gridArea: 'four' }} className=\"button\" onClick={() => handleOperation(4)}>4</button>\n          <button id=\"five\" style={{ gridArea: 'five' }} className=\"button\" onClick={() => handleOperation(5)}>5</button>\n          <button id=\"six\" style={{ gridArea: 'six' }} className=\"button\" onClick={() => handleOperation(6)}>6</button>\n          <button id=\"seven\" style={{ gridArea: 'seven' }} className=\"button\" onClick={() => handleOperation(7)}>7</button>\n          <button id=\"eight\" style={{ gridArea: 'eight' }} className=\"button\" onClick={() => handleOperation(8)}>8</button>\n          <button id=\"nine\" style={{ gridArea: 'nine' }} className=\"button\" onClick={() => handleOperation(9)}>9</button>\n          <button id=\"decimal\" style={{ gridArea: 'decimal' }} className=\"button\" onClick={() => handleOperation(\".\")}>.</button>\n        \n          <button id=\"clear\" style={{ gridArea: 'clear' }} className=\"button\" onClick={() => setOperation('')}>AC</button>\n\n          <button id=\"add\" style={{ gridArea: 'add' }} className=\"button\" onClick={() => handleOperation(\"+\", OPERATOR)}>+</button>\n          <button id=\"subtract\" style={{ gridArea: 'subtract' }} className=\"button\" onClick={() => handleOperation(\"-\", OPERATOR)}>-</button>\n          <button id=\"multiply\" style={{ gridArea: 'multiply' }} className=\"button\" onClick={() => handleOperation(\"x\", OPERATOR)}>x</button>\n          <button id=\"divide\" style={{ gridArea: 'divide' }} className=\"button\" onClick={() => handleOperation(\"/\", OPERATOR)}>/</button>\n          <button id=\"equals\" style={{ gridArea: 'equals' }} className=\"button\" onClick={() => handleEqual()}>=</button>\n       \n        </div>\n        \n        <p>{\"Debuggin || result \" + result + \" || operation: \" + operation + \"||\"}</p>\n  \n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}