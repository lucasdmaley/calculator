{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["math","create","all","OPERATOR","App","_useState","useState","_useState2","Object","slicedToArray","operation","setOperation","_useState3","_useState4","result","setResult","_useState5","_useState6","numberInput","setNumberInput","_useState7","_useState8","operatorInput","setOperatorInput","handleOperation","operationInput","type","arguments","length","undefined","console","log","handleOperator","handleNumber","number","includes","toString","concat","operator","replace","react_default","a","createElement","id","style","gridArea","className","onClick","tempResult","round","evaluate","handleEqual","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.adf4d28c.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport { create, all } from 'mathjs';\n\nconst config = { };\nconst math = create(all, config);\n\nconst OPERATOR = \"operator\";\n\nfunction App() {\n  const [ operation, setOperation ] = useState('0');\n  const [ result, setResult ] = useState(0);\n  const [ numberInput, setNumberInput ] = useState('0');\n  const [ operatorInput, setOperatorInput ] = useState('');\n\n  const handleOperation = (operationInput, type = \"numberModifier\") => {\n    \n    console.log(\"handling operation, numberInput: \" + numberInput + \", operation: \"+ operation);\n    //\n    if (operationInput === \"-\") {\n      if (numberInput === \"0\" || numberInput === \"\") {\n        handleNumber(operationInput);\n      } else {\n        handleOperator(operationInput);\n      }\n      return;\n    }\n\n    if (type === OPERATOR) {\n      handleOperator(operationInput);\n    } else {\n      handleNumber(operationInput);\n    }\n  }\n\n  const handleNumber = (number) => {\n    //multiple zeros or multiple periods\n    if ((number === 0 && numberInput === \"0\") || (number === \".\" && numberInput.includes(\".\"))) {\n      console.log(\"too many zeros\")\n      return;\n    }\n\n    if (operation === \"0\" && number !== \".\") {\n      setNumberInput(number.toString());\n      setOperation(number.toString());\n      return;\n    }\n\n    setNumberInput(numberInput.concat(number));\n    if (number !== \"-\") setOperatorInput('')\n    setOperation(operation.concat(number));\n  }\n\n  const handleOperator = (operator) => {\n    console.log(\"operator\")\n\n    if (operatorInput !== '') {\n      setOperatorInput(operator);\n      setOperation(operation.replace(/\\D+$/, operator));\n      return;\n    }\n\n    setNumberInput('');\n    setOperatorInput(operator)\n    setOperation(operation.concat(operator));\n  }\n\n  const handleEqual = () => {\n    let tempResult = math.round(math.evaluate(operation.replace('x', '*')), 6);\n    setResult(tempResult);\n    setOperation(tempResult.toString());\n  }\n\n  return (\n    <div id=\"calculator\">\n        <div id=\"displayContainer\">\n          <p id=\"display\">{operation}</p>\n          <p id=\"displayResult\">{result}</p>\n        </div>\n    \n        <div id=\"buttons\">\n          <button id=\"zero\" style={{ gridArea: 'zero' }} className=\"button\" onClick={() => handleOperation(0)}>0</button>\n          <button id=\"one\" style={{ gridArea: 'one' }} className=\"button\" onClick={() => handleOperation(1)}>1</button>\n          <button id=\"two\" style={{ gridArea: 'two' }} className=\"button\" onClick={() => handleOperation(2)}>2</button>\n          <button id=\"three\" style={{ gridArea: 'three' }} className=\"button\" onClick={() => handleOperation(3)}>3</button>\n          <button id=\"four\" style={{ gridArea: 'four' }} className=\"button\" onClick={() => handleOperation(4)}>4</button>\n          <button id=\"five\" style={{ gridArea: 'five' }} className=\"button\" onClick={() => handleOperation(5)}>5</button>\n          <button id=\"six\" style={{ gridArea: 'six' }} className=\"button\" onClick={() => handleOperation(6)}>6</button>\n          <button id=\"seven\" style={{ gridArea: 'seven' }} className=\"button\" onClick={() => handleOperation(7)}>7</button>\n          <button id=\"eight\" style={{ gridArea: 'eight' }} className=\"button\" onClick={() => handleOperation(8)}>8</button>\n          <button id=\"nine\" style={{ gridArea: 'nine' }} className=\"button\" onClick={() => handleOperation(9)}>9</button>\n          <button id=\"decimal\" style={{ gridArea: 'decimal' }} className=\"button\" onClick={() => handleOperation(\".\")}>.</button>\n        \n          <button id=\"clear\" style={{ gridArea: 'clear' }} className=\"button\" onClick={() => {setOperation('0'); setNumberInput('0'); setOperatorInput('')}}>AC</button>\n\n          <button id=\"add\" style={{ gridArea: 'add' }} className=\"button\" onClick={() => handleOperation(\"+\", OPERATOR)}>+</button>\n          <button id=\"subtract\" style={{ gridArea: 'subtract' }} className=\"button\" onClick={() => handleOperation(\"-\", OPERATOR)}>-</button>\n          <button id=\"multiply\" style={{ gridArea: 'multiply' }} className=\"button\" onClick={() => handleOperation(\"x\", OPERATOR)}>x</button>\n          <button id=\"divide\" style={{ gridArea: 'divide' }} className=\"button\" onClick={() => handleOperation(\"/\", OPERATOR)}>/</button>\n          <button id=\"equals\" style={{ gridArea: 'equals' }} className=\"button\" onClick={() => handleEqual()}>=</button>\n       \n        </div>\n        \n        <p>{\"Debuggin || numberInput: \" + numberInput + \" || operatorInput: \" + operatorInput}</p>\n  \n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}